{"version":3,"sources":["../src/jsx.js"],"names":["normalizeAttrs","html","DEF_NS","DEF_MODS","SVG_NS","includes","indexOf","substring","buildFromStringTag","selector","classNames","Array","isArray","length","join","replace","sel","data","children","map","text","key","buildFromComponent","render","console","error","Error","mapPropsToAttrs","attrs","props","keys","addNSAndAttrs","ns","buildVnode","prototype","slice","call","arguments"],"mappings":"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","file":"jsx.js","sourcesContent":["import { tryFlatten, isPrimitive, isClass, isFunc, isObj, isSvg } from './utils'\n\nconst DEF_NS = 'props'\nconst DEF_MODS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset']\nconst SVG_NS = 'http://www.w3.org/2000/svg'\n\nexport function normalizeAttrs (attrs) {\n  const map = {}\n\n  for (let key in attrs) {\n    if (DEF_MODS.includes(key)) {\n      map[key] = attrs[key]\n    } else if (key !== 'key' && key !== 'classNames' && key !== 'selector') {\n      const idx = key.indexOf('-')\n      if (idx !== -1) {\n        const nsKey = key.substring(0, idx)\n        const attrsKey = key.substring(idx + 1)\n        addAttr(nsKey, attrsKey, attrs[key])\n      } else if (!map[key]) {\n        addAttr(DEF_NS, key, attrs[key])\n      }\n    }\n  }\n\n  return map\n\n  function addAttr (nsKey, key, val) {\n    const ns = map[nsKey] || {}\n    ns[key] = val\n    map[nsKey] = ns\n  }\n}\n\nfunction buildFromStringTag (tag, attrs, children) {\n  if (attrs.selector && attrs.selector !== '') {\n    tag = tag + attrs.selector\n  }\n\n  if (\n    attrs.classNames &&\n    ((Array.isArray(attrs.classNames) && attrs.classNames.length !== 0) ||\n      attrs.classNames !== '')\n  ) {\n    const cns = attrs.classNames\n    tag =\n      tag +\n      '.' +\n      (Array.isArray(cns) ? cns.join('.') : cns.replace(/\\s+/g, '.'))\n  }\n\n  return {\n    sel: tag,\n    data: normalizeAttrs(attrs),\n    children: children.map(c => (isPrimitive(c) ? { text: c } : c)),\n    key: attrs.key\n  }\n}\n\nfunction buildFromComponent (tag, attrs, children) {\n  let res\n  const isClass_ = isClass(tag)\n  const isFunc_ = isFunc(tag)\n  const hasRender_ = isObj(tag) && typeof tag.render === 'function'\n\n  if (isClass_) {\n    const Tag = tag\n    res = new Tag(attrs, children).render()\n  } else if (hasRender_) {\n    res = tag.render(attrs, children)\n  } else if (isFunc_) {\n    res = tag(attrs, children)\n  } else {\n    console.error(\n      'JSX tag error: tag =',\n      tag,\n      ', attrs =',\n      attrs,\n      ', children =',\n      children\n    )\n    throw new Error(\n      `JSX tag must be either a 'string', a 'function' or\n      an 'object'/a 'class' with either a 'view' or a 'render' method.`\n    )\n  }\n\n  if (res) {\n    res.key = attrs.key\n  }\n\n  return res\n}\n\nfunction mapPropsToAttrs (data) {\n  const attrs = data.attrs || (data.attrs = {})\n  const props = data.props || (data.props = {})\n\n  for (let key in props) {\n    if (attrs[key] === undefined) {\n      attrs[key] = props[key]\n      delete props[key]\n    }\n  }\n\n  data.attrs = attrs\n\n  if (Object.keys(props).length > 0) {\n    data.props = props\n  } else {\n    delete data.props\n  }\n\n  return data\n}\n\nfunction addNSAndAttrs (vnode) {\n  const data = vnode.data || {}\n  data.ns = SVG_NS\n  vnode.data = mapPropsToAttrs(data)\n\n  if (vnode.sel !== 'foreignObject') {\n    for (let i = 0; i < vnode.children.length; i++) {\n      addNSAndAttrs(vnode.children[i])\n    }\n  }\n}\n\nfunction buildVnode (tag, attrs, children) {\n  children = tryFlatten(children)\n\n  if (typeof tag === 'string') {\n    const vnode = buildFromStringTag(tag, attrs, children)\n    const sel = vnode.sel\n\n    if (isSvg(sel)) {\n      addNSAndAttrs(vnode)\n    }\n\n    return vnode\n  } else {\n    return buildFromComponent(tag, attrs, children)\n  }\n}\n\nexport default function html (tag, attrs, children) {\n  attrs = attrs || {}\n  children = children || []\n  if (typeof attrs !== 'object') {\n    console.error(\n      'JSX attrs error: tag =',\n      tag,\n      ', attrs =',\n      attrs,\n      ', children =',\n      children\n    )\n    throw new Error(\"JSX attrs must be of type 'object'.\")\n  }\n\n  if (arguments.length > 3 || !Array.isArray(children)) {\n    children = Array.prototype.slice.call(arguments, 2)\n  }\n\n  return buildVnode(tag, attrs, children)\n}\n"]}